{"remainingRequest":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\sophia\\Barchart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\sophia\\Barchart.vue","mtime":1605991251715},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIgZnJvbSAiQzovVXNlcnMvaHVhd2UvRGVza3RvcC9TYWZldHktQXBwbGljYXRpb24tQ1M1NDIvZGFzaGJvYXJkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvaHVhd2UvRGVza3RvcC9TYWZldHktQXBwbGljYXRpb24tQ1M1NDIvZGFzaGJvYXJkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgR0NoYXJ0IH0gZnJvbSAndnVlLWdvb2dsZS1jaGFydHMnOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwp2YXIgd2ViY2FsbCA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC8iLAogIHRpbWVvdXQ6IDIwMDAwLAogIHdpdGhDcmVkZW50aWFsczogZmFsc2UsCiAgaGVhZGVyczogewogICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIgogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBjb21wb25lbnRzOiB7CiAgICBHQ2hhcnQ6IEdDaGFydAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0c0xpYjogbnVsbCwKICAgICAgLy8gQXJyYXkgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IHByb2Nlc3NlZCB3aXRoIHZpc3VhbGl6YXRpb24uYXJyYXlUb0RhdGFUYWJsZSBmdW5jdGlvbgogICAgICBjaGFydERhdGE6IFtdIC8vc2V0dGluZzoge3BhY2thZ2VzOlsiY29yZWNoYXJ0Il19CgogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaGFydE9wdGlvbnM6IGZ1bmN0aW9uIGNoYXJ0T3B0aW9ucygpIHsKICAgICAgaWYgKCF0aGlzLmNoYXJ0c0xpYikgcmV0dXJuIG51bGw7CiAgICAgIHJldHVybiB0aGlzLmNoYXJ0c0xpYi5jaGFydHMuQmFyLmNvbnZlcnRPcHRpb25zKHsKICAgICAgICBjaGFydDogewogICAgICAgICAgdGl0bGU6ICdXZWF0aGVyIGZyZXF1ZW5jeScgLy8gc3VidGl0bGU6ICfmiJHmiY3kuI3kvJrpgqPkuYjovbvmmJPni5fluKYnCgogICAgICAgIH0sCiAgICAgICAgYmFyczogJ2hvcml6b250YWwnLAogICAgICAgIC8vIFJlcXVpcmVkIGZvciBNYXRlcmlhbCBCYXIgQ2hhcnRzLgogICAgICAgIGhBeGlzOiB7CiAgICAgICAgICB0aXRsZTogJ2hlcmUgaXMgeW91ciB4LWF4aXMgdGl0bGUnLAogICAgICAgICAgbWlueFZhbHVlOiAxMTIsCiAgICAgICAgICBncmlkbGluZXM6IHsKICAgICAgICAgICAgY291bnQ6IDEwCiAgICAgICAgICB9LAogICAgICAgICAgZm9ybWF0OiAnZGVjaW1hbCcsCiAgICAgICAgICBkaXJlY3Rpb246IC0xIC8vIGJhc2VsaW5lQ29sb3I6ICdyZWQnLAogICAgICAgICAgLy8gdGV4dFN0eWxlOiB7Y29sb3I6ICdwaW5rJ30sCiAgICAgICAgICAvLyB0aWNrczogWzUwMCwxMDAwLDE1MDAsMjAwMCxdIAogICAgICAgICAgLy8gYmFzZWxpbmVDb2xvcjogJ3JlZCcKCiAgICAgICAgfSwKICAgICAgICB2QXhpczogewogICAgICAgICAgdGl0bGU6ICdoZXJlIGlzIHlvdXIgeS1heGlzIHRpdGxlJywKICAgICAgICAgIGJhc2VsaW5lQ29sb3I6ICdyZWQnLAogICAgICAgICAgbWluVmFsdWU6IDExMiwKICAgICAgICAgIGRpcmVjdGlvbjogLTEgLy8gdGlja3M6IFs1MDAsMTAwMCwxNTAwLDIwMDAsXSAKICAgICAgICAgIC8vIGdyaWRsaW5lczogeyBjb3VudDogMTAgfQoKICAgICAgICB9LAogICAgICAgIGhlaWdodDogNDAwLAogICAgICAgIGJhcjogewogICAgICAgICAgZ3JvdXBXaWR0aDogJzc1JScKICAgICAgICB9LAogICAgICAgIGNvbG9yczogWycjNzU3MGIzJ10sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBwb3NpdGlvbjogJ25vbmUnCiAgICAgICAgfSAvLyBiYWNrZ3JvdW5kQ29sb3I6ICdyZWQnCiAgICAgICAgLy8gaXNTdGFja2VkOiB0cnVlCgogICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9uQ2hhcnRSZWFkeTogZnVuY3Rpb24gb25DaGFydFJlYWR5KGNoYXJ0LCBnb29nbGUpIHsKICAgICAgdGhpcy5jaGFydHNMaWIgPSBnb29nbGU7CiAgICB9LAogICAgY3JlYXRlR3JhcGg6IGZ1bmN0aW9uIGNyZWF0ZUdyYXBoKCkgewogICAgICB2YXIgdm0gPSB0aGlzOwogICAgICB2YXIgdXJsID0gIi93ZWF0aGVyY250IjsKCiAgICAgIHRyeSB7CiAgICAgICAgd2ViY2FsbC5nZXQodXJsKS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocmVzcG9uc2UpIHsKICAgICAgICAgICAgdmFyIHRlbXAsIHJlc3VsdCwgX2l0ZXJhdG9yLCBfc3RlcCwgaSwgY3VyOwoKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmRhdGEpKTsKCiAgICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICB0ZW1wID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBbWyd0ZXh0JywgJ3ZhbHVlJ11dOwogICAgICAgICAgICAgICAgICAgIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRlbXApOwoKICAgICAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgICAgICAgICAgICAgaSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgICAgICAgICAgICAgICBjdXIgPSBbXTsKICAgICAgICAgICAgICAgICAgICAgICAgY3VyLnB1c2goaVsndGV4dCddKTsKICAgICAgICAgICAgICAgICAgICAgICAgY3VyLnB1c2gocGFyc2VJbnQoaVsndmFsdWUnXSkpOwogICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChjdXIpOwogICAgICAgICAgICAgICAgICAgICAgfSAvLyBhbGVydChyZXN1bHQpCiAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXN1bHQpCgogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgICAgICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIHZtLmNoYXJ0RGF0YSA9IHJlc3VsdC5zbGljZSgwLCAxMSk7CgogICAgICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgfSkpOwoKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgIH07CiAgICAgICAgfSgpKTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coImVycm9yIik7CiAgICAgICAgYWxlcnQoZXJyKTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuY3JlYXRlR3JhcGgoKTsKICB9Cn07"},{"version":3,"sources":["Barchart.vue"],"names":[],"mappings":"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","sourcesContent":["#author: xli14@WPI.EDU\r\n\r\n<template>\r\n  <div id='app'>\r\n  <GChart\r\n    :settings=\"{packages: ['bar']}\"    \r\n    :data=\"chartData\"\r\n    :options=\"chartOptions\"\r\n    :createChart=\"(el, google) => new google.charts.Bar(el)\"\r\n    @ready=\"onChartReady\"\r\n  />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { GChart } from 'vue-google-charts'\r\nimport axios from \"axios\";\r\n\r\nvar webcall = axios.create({\r\n  baseURL: \"http://127.0.0.1:5000/\",\r\n  timeout: 20000,\r\n  withCredentials: false,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    GChart\r\n  },\r\n  data () {\r\n    return {\r\n      chartsLib: null, \r\n      // Array will be automatically processed with visualization.arrayToDataTable function\r\n      chartData: [\r\n        \r\n      ]\r\n      //setting: {packages:[\"corechart\"]}\r\n    }\r\n  },\r\n  computed: {\r\n    chartOptions () {\r\n      if (!this.chartsLib) return null\r\n      return this.chartsLib.charts.Bar.convertOptions({\r\n        chart: {\r\n          title: 'Weather frequency',\r\n          // subtitle: '我才不会那么轻易狗带'\r\n        },\r\n        bars: 'horizontal', // Required for Material Bar Charts.\r\n        hAxis: {\r\n            title: 'here is your x-axis title',\r\n            minxValue: 112, \r\n            gridlines: { count: 10 },\r\n            format: 'decimal', \r\n            direction: -1,\r\n            // baselineColor: 'red',\r\n            // textStyle: {color: 'pink'},\r\n            // ticks: [500,1000,1500,2000,] \r\n            // baselineColor: 'red'\r\n        },\r\n        vAxis: {\r\n            title: 'here is your y-axis title',\r\n            baselineColor: 'red',\r\n            minValue: 112,\r\n            direction: -1 ,\r\n            // ticks: [500,1000,1500,2000,] \r\n            // gridlines: { count: 10 }\r\n        },\r\n        height: 400,\r\n        bar: {groupWidth: '75%'},\r\n        colors: ['#7570b3'],\r\n        legend: { position: 'none' }\r\n        // backgroundColor: 'red'\r\n        // isStacked: true\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    onChartReady (chart, google) {\r\n      this.chartsLib = google\r\n    },\r\n    createGraph() {\r\n      var vm = this;\r\n      var url = \"/weathercnt\";\r\n      try {\r\n        webcall.get(url).then(async function (response) {\r\n          var temp = await JSON.parse(JSON.stringify(response.data));\r\n          var result = [['text', 'value']]\r\n          for(var i of temp){\r\n            var cur = []\r\n            cur.push(i['text'])\r\n            cur.push(parseInt(i['value']))\r\n            result.push(cur)\r\n          }\r\n          // alert(result)\r\n          // console.log(result)\r\n          vm.chartData = result.slice(0,11)\r\n        });\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n        alert(err);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.createGraph();\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/sophia"}]}