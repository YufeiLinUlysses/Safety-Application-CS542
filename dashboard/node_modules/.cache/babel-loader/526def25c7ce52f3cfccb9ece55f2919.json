{"remainingRequest":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\test.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\test.vue","mtime":1604933610604},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOyAvLyBpbXBvcnQgKiBhcyBkM2dlbyBmcm9tICJkMy1nZW8tcHJvamVjdGlvbiI7Ci8vIGltcG9ydCAqIGFzIGQzc2NhbGUgZnJvbSAiZDMtc2NhbGUtY2hyb21hdGljIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlTWFwOiBmdW5jdGlvbiBjcmVhdGVNYXAoKSB7CiAgICAgIHZhciB3ID0gNTAwOwogICAgICB2YXIgaCA9IDUwMDsKICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgiI2dlbyIpLmFwcGVuZCgic3ZnIikuYXR0cigid2lkdGgiLCB3KS5hdHRyKCJoZWlnaHQiLCBoKTsgLy8gTWFwIGFuZCBwcm9qZWN0aW9uCgogICAgICB2YXIgcGF0aCA9IGQzLmdlb1BhdGgoKTsKICAgICAgdmFyIHByb2plY3Rpb24gPSBkMy5nZW9NZXJjYXRvcigpLnNjYWxlKDcwKS5jZW50ZXIoWzAsIDIwXSkudHJhbnNsYXRlKFt3IC8gMiwgaCAvIDJdKTsgLy8gRGF0YSBhbmQgY29sb3Igc2NhbGUKCiAgICAgIHZhciBkYXRhID0gZDMubWFwKCk7CiAgICAgIHZhciBjb2xvclNjYWxlID0gZDMuc2NhbGVUaHJlc2hvbGQoKS5kb21haW4oWzEwMDAwMCwgMTAwMDAwMCwgMTAwMDAwMDAsIDMwMDAwMDAwLCAxMDAwMDAwMDAsIDUwMDAwMDAwMF0pLnJhbmdlKGQzLnNjaGVtZUJsdWVzWzddKTsgLy8gTG9hZCBleHRlcm5hbCBkYXRhIGFuZCBib290CgogICAgICBkMy5xdWV1ZSgpLmRlZmVyKGQzLmpzb24sICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vaG9sdHp5L0QzLWdyYXBoLWdhbGxlcnkvbWFzdGVyL0RBVEEvd29ybGQuZ2VvanNvbiIpLmRlZmVyKGQzLmNzdiwgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9ob2x0enkvRDMtZ3JhcGgtZ2FsbGVyeS9tYXN0ZXIvREFUQS93b3JsZF9wb3B1bGF0aW9uLmNzdiIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgZGF0YS5zZXQoZC5jb2RlLCArZC5wb3ApOwogICAgICB9KS5hd2FpdChyZWFkeSk7CgogICAgICBmdW5jdGlvbiByZWFkeShlcnJvciwgdG9wbykgewogICAgICAgIC8vIERyYXcgdGhlIG1hcAogICAgICAgIHN2Zy5hcHBlbmQoImciKS5zZWxlY3RBbGwoInBhdGgiKS5kYXRhKHRvcG8uZmVhdHVyZXMpLmVudGVyKCkuYXBwZW5kKCJwYXRoIikgLy8gZHJhdyBlYWNoIGNvdW50cnkKICAgICAgICAuYXR0cigiZCIsIGQzLmdlb1BhdGgoKS5wcm9qZWN0aW9uKHByb2plY3Rpb24pKSAvLyBzZXQgdGhlIGNvbG9yIG9mIGVhY2ggY291bnRyeQogICAgICAgIC5hdHRyKCJmaWxsIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIGQudG90YWwgPSBkYXRhLmdldChkLmlkKSB8fCAwOwogICAgICAgICAgY29uc29sZS5sb2cocGF0aCk7CiAgICAgICAgICByZXR1cm4gY29sb3JTY2FsZShkLnRvdGFsKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["test.vue"],"names":[],"mappings":";;;;;;;AAQA,OAAA,KAAA,EAAA,MAAA,IAAA,C,CACA;AACA;;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA,EAAA;AACA,GAHA;AAIA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,CAAA,GAAA,GAAA;AACA,UAAA,CAAA,GAAA,GAAA;AACA,UAAA,GAAA,GAAA,EAAA,CACA,MADA,CACA,MADA,EAEA,MAFA,CAEA,KAFA,EAGA,IAHA,CAGA,OAHA,EAGA,CAHA,EAIA,IAJA,CAIA,QAJA,EAIA,CAJA,CAAA,CAHA,CASA;;AACA,UAAA,IAAA,GAAA,EAAA,CAAA,OAAA,EAAA;AACA,UAAA,UAAA,GAAA,EAAA,CACA,WADA,GAEA,KAFA,CAEA,EAFA,EAGA,MAHA,CAGA,CAAA,CAAA,EAAA,EAAA,CAHA,EAIA,SAJA,CAIA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAJA,CAAA,CAXA,CAiBA;;AACA,UAAA,IAAA,GAAA,EAAA,CAAA,GAAA,EAAA;AACA,UAAA,UAAA,GAAA,EAAA,CACA,cADA,GAEA,MAFA,CAEA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,CAFA,EAGA,KAHA,CAGA,EAAA,CAAA,WAAA,CAAA,CAAA,CAHA,CAAA,CAnBA,CAwBA;;AACA,MAAA,EAAA,CAAA,KAAA,GACA,KADA,CAEA,EAAA,CAAA,IAFA,EAGA,qFAHA,EAKA,KALA,CAMA,EAAA,CAAA,GANA,EAOA,4FAPA,EAQA,UAAA,CAAA,EAAA;AACA,QAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAA;AACA,OAVA,EAYA,KAZA,CAYA,KAZA;;AAaA,eAAA,KAAA,CAAA,KAAA,EAAA,IAAA,EAAA;AACA;AACA,QAAA,GAAA,CACA,MADA,CACA,GADA,EAEA,SAFA,CAEA,MAFA,EAGA,IAHA,CAGA,IAAA,CAAA,QAHA,EAIA,KAJA,GAKA,MALA,CAKA,MALA,EAMA;AANA,SAOA,IAPA,CAOA,GAPA,EAOA,EAAA,CAAA,OAAA,GAAA,UAAA,CAAA,UAAA,CAPA,EAQA;AARA,SASA,IATA,CASA,MATA,EASA,UAAA,CAAA,EAAA;AACA,UAAA,CAAA,CAAA,KAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,iBAAA,UAAA,CAAA,CAAA,CAAA,KAAA,CAAA;AACA,SAbA;AAcA;AACA;AAxDA;AAJA,CAAA","sourcesContent":["<template>\r\n  <!-- <div id=\"app\">\r\n    <svg id=\"my_dataviz\" width=\"400\" height=\"300\"></svg>\r\n  </div> -->\r\n  <v-col id=\"geo\" />\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3\";\r\n// import * as d3geo from \"d3-geo-projection\";\r\n// import * as d3scale from \"d3-scale-chromatic\";\r\nexport default {\r\n  data() {\r\n    return {};\r\n  },\r\n  methods: {\r\n    createMap: function () {\r\n      const w = 500;\r\n      const h = 500;\r\n      const svg = d3\r\n        .select(\"#geo\")\r\n        .append(\"svg\")\r\n        .attr(\"width\", w)\r\n        .attr(\"height\", h);\r\n\r\n      // Map and projection\r\n      var path = d3.geoPath();\r\n      var projection = d3\r\n        .geoMercator()\r\n        .scale(70)\r\n        .center([0, 20])\r\n        .translate([w / 2, h / 2]);\r\n\r\n      // Data and color scale\r\n      var data = d3.map();\r\n      var colorScale = d3\r\n        .scaleThreshold()\r\n        .domain([100000, 1000000, 10000000, 30000000, 100000000, 500000000])\r\n        .range(d3.schemeBlues[7]);\r\n\r\n      // Load external data and boot\r\n      d3.queue()\r\n        .defer(\r\n          d3.json,\r\n          \"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\"\r\n        )\r\n        .defer(\r\n          d3.csv,\r\n          \"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world_population.csv\",\r\n          function (d) {\r\n            data.set(d.code, +d.pop);\r\n          }\r\n        )\r\n        .await(ready);\r\n      function ready(error, topo) {\r\n        // Draw the map\r\n        svg\r\n          .append(\"g\")\r\n          .selectAll(\"path\")\r\n          .data(topo.features)\r\n          .enter()\r\n          .append(\"path\")\r\n          // draw each country\r\n          .attr(\"d\", d3.geoPath().projection(projection))\r\n          // set the color of each country\r\n          .attr(\"fill\", function (d) {\r\n            d.total = data.get(d.id) || 0;\r\n            console.log(path)\r\n            return colorScale(d.total);\r\n          });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}