{"remainingRequest":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\NearByGraphs\\barchart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\NearByGraphs\\barchart.vue","mtime":1606419680986},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgR0NoYXJ0IH0gZnJvbSAidnVlLWdvb2dsZS1jaGFydHMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwp2YXIgd2ViY2FsbCA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC8iLAogIHRpbWVvdXQ6IDIwMDAwLAogIHdpdGhDcmVkZW50aWFsczogZmFsc2UsCiAgaGVhZGVyczogewogICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIgogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQXBwIiwKICBjb21wb25lbnRzOiB7CiAgICBHQ2hhcnQKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvdzogdHJ1ZSwKICAgICAgY2hhcnRzTGliOiBudWxsLAogICAgICAvLyBBcnJheSB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcHJvY2Vzc2VkIHdpdGggdmlzdWFsaXphdGlvbi5hcnJheVRvRGF0YVRhYmxlIGZ1bmN0aW9uCiAgICAgIGNoYXJ0RGF0YTogW10gLy9zZXR0aW5nOiB7cGFja2FnZXM6WyJjb3JlY2hhcnQiXX0KCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBjaGFydE9wdGlvbnMoKSB7CiAgICAgIGlmICghdGhpcy5jaGFydHNMaWIpIHJldHVybiBudWxsOwogICAgICByZXR1cm4gdGhpcy5jaGFydHNMaWIuY2hhcnRzLkJhci5jb252ZXJ0T3B0aW9ucyh7CiAgICAgICAgYmFyczogImhvcml6b250YWwiLAogICAgICAgIC8vIFJlcXVpcmVkIGZvciBNYXRlcmlhbCBCYXIgQ2hhcnRzLgogICAgICAgIGhBeGlzOiB7CiAgICAgICAgICB0aXRsZTogIkNvdW50IiwKICAgICAgICAgIG1pbnhWYWx1ZTogMTEyLAogICAgICAgICAgZ3JpZGxpbmVzOiB7CiAgICAgICAgICAgIGNvdW50OiAxMAogICAgICAgICAgfSwKICAgICAgICAgIGZvcm1hdDogImRlY2ltYWwiLAogICAgICAgICAgZGlyZWN0aW9uOiAtMSAvLyBiYXNlbGluZUNvbG9yOiAncmVkJywKICAgICAgICAgIC8vIHRleHRTdHlsZToge2NvbG9yOiAncGluayd9LAogICAgICAgICAgLy8gdGlja3M6IFs1MDAsMTAwMCwxNTAwLDIwMDAsXQogICAgICAgICAgLy8gYmFzZWxpbmVDb2xvcjogJ3JlZCcKCiAgICAgICAgfSwKICAgICAgICB2QXhpczogewogICAgICAgICAgdGl0bGU6ICJIb3VyIG9mIHRoZSBEYXkiLAogICAgICAgICAgYmFzZWxpbmVDb2xvcjogInJlZCIsCiAgICAgICAgICBtaW5WYWx1ZTogMTEyLAogICAgICAgICAgZGlyZWN0aW9uOiAtMSAvLyB0aWNrczogWzUwMCwxMDAwLDE1MDAsMjAwMCxdCiAgICAgICAgICAvLyBncmlkbGluZXM6IHsgY291bnQ6IDEwIH0KCiAgICAgICAgfSwKICAgICAgICBoZWlnaHQ6IDMwMCwKICAgICAgICBiYXI6IHsKICAgICAgICAgIGdyb3VwV2lkdGg6ICI3NSUiCiAgICAgICAgfSwKICAgICAgICBjb2xvcnM6IFsiIzc1NzBiMyJdLAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgcG9zaXRpb246ICJub25lIgogICAgICAgIH0gLy8gYmFja2dyb3VuZENvbG9yOiAncmVkJwogICAgICAgIC8vIGlzU3RhY2tlZDogdHJ1ZQoKICAgICAgfSk7CiAgICB9CgogIH0sCiAgbWV0aG9kczogewogICAgb25DaGFydFJlYWR5KGNoYXJ0LCBnb29nbGUpIHsKICAgICAgdGhpcy5jaGFydHNMaWIgPSBnb29nbGU7CiAgICB9LAoKICAgIGNyZWF0ZUdyYXBoKCkgewogICAgICB2YXIgdm0gPSB0aGlzOwogICAgICB2YXIgdXJsID0gIi9sb2NUaW1lQ291bnQiOwoKICAgICAgdHJ5IHsKICAgICAgICB3ZWJjYWxsLnBvc3QodXJsLCB2bS4kc3RvcmUuc3RhdGUubG9jYXRpb24pLnRoZW4oYXN5bmMgZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICB2YXIgdGVtcCA9IGF3YWl0IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UuZGF0YSkpOwoKICAgICAgICAgIGlmICh0ZW1wLmxlbmd0aCA8PSAxIHx8IHRlbXAubGVuZ3RoID09IHVuZGVmaW5lZCkgewogICAgICAgICAgICB2bS5zaG93ID0gZmFsc2U7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgcmVzdWx0ID0gW1siVElNRVNMT1QiLCAiTlVNIl1dOwoKICAgICAgICAgICAgZm9yICh2YXIgaSBvZiB0ZW1wKSB7CiAgICAgICAgICAgICAgdmFyIGN1ciA9IFtdOwogICAgICAgICAgICAgIGN1ci5wdXNoKGlbIlRJTUVTTE9UIl0pOwogICAgICAgICAgICAgIGN1ci5wdXNoKHBhcnNlSW50KGlbIk5VTSJdKSk7CiAgICAgICAgICAgICAgcmVzdWx0LnB1c2goY3VyKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdm0uY2hhcnREYXRhID0gcmVzdWx0LnNsaWNlKDAsIDExKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coImVycm9yIik7CiAgICAgICAgYWxlcnQoZXJyKTsKICAgICAgfQogICAgfQoKICB9LAoKICBtb3VudGVkKCkgewogICAgdGhpcy5jcmVhdGVHcmFwaCgpOwogIH0KCn07"},{"version":3,"sources":["barchart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA,SAAA,MAAA,QAAA,mBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,IAAA,OAAA,GAAA,KAAA,CAAA,MAAA,CAAA;AACA,EAAA,OAAA,EAAA,wBADA;AAEA,EAAA,OAAA,EAAA,KAFA;AAGA,EAAA,eAAA,EAAA,KAHA;AAIA,EAAA,OAAA,EAAA;AAAA,oBAAA;AAAA;AAJA,CAAA,CAAA;AAOA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;;AAKA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,IAFA;AAGA;AACA,MAAA,SAAA,EAAA,EAJA,CAKA;;AALA,KAAA;AAOA,GAbA;;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,YAAA,GAAA;AACA,UAAA,CAAA,KAAA,SAAA,EAAA,OAAA,IAAA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,cAAA,CAAA;AACA,QAAA,IAAA,EAAA,YADA;AACA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA,OADA;AAEA,UAAA,SAAA,EAAA,GAFA;AAGA,UAAA,SAAA,EAAA;AAAA,YAAA,KAAA,EAAA;AAAA,WAHA;AAIA,UAAA,MAAA,EAAA,SAJA;AAKA,UAAA,SAAA,EAAA,CAAA,CALA,CAMA;AACA;AACA;AACA;;AATA,SAFA;AAaA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA,iBADA;AAEA,UAAA,aAAA,EAAA,KAFA;AAGA,UAAA,QAAA,EAAA,GAHA;AAIA,UAAA,SAAA,EAAA,CAAA,CAJA,CAKA;AACA;;AANA,SAbA;AAqBA,QAAA,MAAA,EAAA,GArBA;AAsBA,QAAA,GAAA,EAAA;AAAA,UAAA,UAAA,EAAA;AAAA,SAtBA;AAuBA,QAAA,MAAA,EAAA,CAAA,SAAA,CAvBA;AAwBA,QAAA,MAAA,EAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAxBA,CAyBA;AACA;;AA1BA,OAAA,CAAA;AA4BA;;AA/BA,GAdA;AA+CA,EAAA,OAAA,EAAA;AACA,IAAA,YAAA,CAAA,KAAA,EAAA,MAAA,EAAA;AACA,WAAA,SAAA,GAAA,MAAA;AACA,KAHA;;AAIA,IAAA,WAAA,GAAA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,UAAA,GAAA,GAAA,eAAA;;AACA,UAAA;AACA,QAAA,OAAA,CACA,IADA,CACA,GADA,EACA,EAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QADA,EAEA,IAFA,CAEA,gBAAA,QAAA,EAAA;AACA,cAAA,IAAA,GAAA,MAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA;;AACA,cAAA,IAAA,CAAA,MAAA,IAAA,CAAA,IAAA,IAAA,CAAA,MAAA,IAAA,SAAA,EAAA;AACA,YAAA,EAAA,CAAA,IAAA,GAAA,KAAA;AACA,WAFA,MAEA;AACA,gBAAA,MAAA,GAAA,CAAA,CAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;AACA,iBAAA,IAAA,CAAA,IAAA,IAAA,EAAA;AACA,kBAAA,GAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,UAAA,CAAA;AACA,cAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,GAAA;AACA;;AACA,YAAA,EAAA,CAAA,SAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA;AACA,SAhBA;AAiBA,OAlBA,CAkBA,OAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA,QAAA,KAAA,CAAA,GAAA,CAAA;AACA;AACA;;AA7BA,GA/CA;;AA8EA,EAAA,OAAA,GAAA;AACA,SAAA,WAAA;AACA;;AAhFA,CAAA","sourcesContent":["<!--author: xli14@WPI.EDU-->\r\n\r\n<template>\r\n  <div id=\"app\" class=\"mt-3\" v-if=\"show\">\r\n    <h5 class=\"text-center\">Hour Frequency</h5>\r\n    <br />\r\n    <GChart\r\n      :settings=\"{ packages: ['bar'] }\"\r\n      :data=\"chartData\"\r\n      :options=\"chartOptions\"\r\n      :createChart=\"(el, google) => new google.charts.Bar(el)\"\r\n      @ready=\"onChartReady\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { GChart } from \"vue-google-charts\";\r\nimport axios from \"axios\";\r\n\r\nvar webcall = axios.create({\r\n  baseURL: \"http://127.0.0.1:5000/\",\r\n  timeout: 20000,\r\n  withCredentials: false,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    GChart,\r\n  },\r\n  data() {\r\n    return {\r\n      show: true,\r\n      chartsLib: null,\r\n      // Array will be automatically processed with visualization.arrayToDataTable function\r\n      chartData: [],\r\n      //setting: {packages:[\"corechart\"]}\r\n    };\r\n  },\r\n  computed: {\r\n    chartOptions() {\r\n      if (!this.chartsLib) return null;\r\n      return this.chartsLib.charts.Bar.convertOptions({\r\n        bars: \"horizontal\", // Required for Material Bar Charts.\r\n        hAxis: {\r\n          title: \"Count\",\r\n          minxValue: 112,\r\n          gridlines: { count: 10 },\r\n          format: \"decimal\",\r\n          direction: -1,\r\n          // baselineColor: 'red',\r\n          // textStyle: {color: 'pink'},\r\n          // ticks: [500,1000,1500,2000,]\r\n          // baselineColor: 'red'\r\n        },\r\n        vAxis: {\r\n          title: \"Hour of the Day\",\r\n          baselineColor: \"red\",\r\n          minValue: 112,\r\n          direction: -1,\r\n          // ticks: [500,1000,1500,2000,]\r\n          // gridlines: { count: 10 }\r\n        },\r\n        height: 300,\r\n        bar: { groupWidth: \"75%\" },\r\n        colors: [\"#7570b3\"],\r\n        legend: { position: \"none\" },\r\n        // backgroundColor: 'red'\r\n        // isStacked: true\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    onChartReady(chart, google) {\r\n      this.chartsLib = google;\r\n    },\r\n    createGraph() {\r\n      var vm = this;\r\n      var url = \"/locTimeCount\";\r\n      try {\r\n        webcall\r\n          .post(url, vm.$store.state.location)\r\n          .then(async function (response) {\r\n            var temp = await JSON.parse(JSON.stringify(response.data));\r\n            if (temp.length <= 1 || temp.length == undefined) {\r\n              vm.show = false;\r\n            } else {\r\n              var result = [[\"TIMESLOT\", \"NUM\"]];\r\n              for (var i of temp) {\r\n                var cur = [];\r\n                cur.push(i[\"TIMESLOT\"]);\r\n                cur.push(parseInt(i[\"NUM\"]));\r\n                result.push(cur);\r\n              }\r\n              vm.chartData = result.slice(0, 11);\r\n            }\r\n          });\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n        alert(err);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.createGraph();\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components/NearByGraphs"}]}