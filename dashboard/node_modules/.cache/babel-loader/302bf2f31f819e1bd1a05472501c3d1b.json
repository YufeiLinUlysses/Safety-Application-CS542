{"remainingRequest":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\insertTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\insertTable.vue","mtime":1606394738763},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["insertTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <b-table :items=\"items\" :fields=\"fields\" striped responsive=\"sm\">\r\n      <template #cell(confirmed)=\"row\">\r\n        <!-- As `row.showDetails` is one-way, we call the toggleDetails function on @change -->\r\n        <b-form-checkbox v-model=\"row.item.Confirmed\"></b-form-checkbox>\r\n      </template>\r\n    </b-table>\r\n    <div class=\"text-right\">\r\n      <b-button @click=\"submitChanges\">Submit</b-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nvar webcall = axios.create({\r\n  baseURL: \"http://127.0.0.1:5000/\",\r\n  timeout: 20000,\r\n  withCredentials: false,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\nexport default {\r\n  data() {\r\n    return {\r\n      reloading: true,\r\n      fields: [\r\n        \"ID\",\r\n        \"Lat\",\r\n        \"Lng\",\r\n        \"Police_District\",\r\n        \"Date\",\r\n        \"Hour\",\r\n        \"Relation\",\r\n        \"CriminalID\",\r\n        \"VictimID\",\r\n        \"CrimeType\",\r\n        \"Confirmed\",\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.loadData();\r\n  },\r\n  computed: {\r\n    items() {\r\n      return this.$store.state.table;\r\n    },\r\n  },\r\n  methods: {\r\n    loadData() {\r\n      var vm = this;\r\n      try {\r\n        webcall.get(\"/requestInsert\").then(async function (response) {\r\n          var temp = await JSON.parse(JSON.stringify(response.data));\r\n          var result = [];\r\n          for (var i of temp) {\r\n            var cur = {};\r\n            cur[\"ID\"] = i[\"InsertID\"];\r\n            cur[\"Lat\"] = i[\"LAT\"];\r\n            cur[\"Lng\"] = i[\"LON\"];\r\n            var curT = new Date(i[\"TIMESTAMP\"] * 1000);\r\n            cur[\"Date\"] =\r\n              curT.getFullYear() + \"-\" + curT.getMonth() + \"-\" + curT.getDate();\r\n            cur[\"Hour\"] = i[\"TIMESLOT\"];\r\n            cur[\"Relation\"] = i[\"Relation\"];\r\n            cur[\"CriminalID\"] = i[\"CriminalID\"];\r\n            cur[\"VictimID\"] = i[\"VictimID\"];\r\n            cur[\"CrimeType\"] = i[\"CrimeType\"];\r\n            cur[\"Police_District\"] = i[\"POLICE_DISTRICT\"];\r\n            cur[\"Confirmed\"] = false;\r\n            result.push(cur);\r\n          }\r\n          vm.$store.commit(\"updateTable\", result);\r\n        });\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n        alert(err);\r\n      }\r\n    },\r\n    submitChanges() {\r\n      var vm = this;\r\n      var result = [];\r\n      for (var i of this.items) {\r\n        var cur = {};\r\n        if (i[\"Confirmed\"]) {\r\n          cur[\"ID\"] = i[\"ID\"];\r\n          cur[\"Confirmed\"] = i[\"Confirmed\"];\r\n          result.push(cur);\r\n        }\r\n      }\r\n      var final = JSON.stringify(result);\r\n      webcall.post(\"/crimeConfirm\", final).then(async function (response) {\r\n        var temp = await JSON.parse(JSON.stringify(response.data));\r\n        var result = [];\r\n        for (var i of temp) {\r\n          var cur = {};\r\n          cur[\"ID\"] = i[\"InsertID\"];\r\n          cur[\"Lat\"] = i[\"LAT\"];\r\n          cur[\"Lng\"] = i[\"LON\"];\r\n          var curT = new Date(i[\"TIMESTAMP\"] * 1000);\r\n          cur[\"Date\"] =\r\n            curT.getFullYear() + \"-\" + curT.getMonth() + \"-\" + curT.getDate();\r\n          cur[\"Hour\"] = i[\"TIMESLOT\"];\r\n          cur[\"Relation\"] = i[\"Relation\"];\r\n          cur[\"CriminalID\"] = i[\"CriminalID\"];\r\n          cur[\"VictimID\"] = i[\"VictimID\"];\r\n          cur[\"CrimeType\"] = i[\"CrimeType\"];\r\n          cur[\"Police_District\"] = i[\"POLICE_DISTRICT\"];\r\n          cur[\"Confirmed\"] = false;\r\n          result.push(cur);\r\n        }\r\n        vm.$store.commit(\"updateTable\", result);\r\n      });\r\n      console.log(result);\r\n    },\r\n  },\r\n};\r\n</script>"],"sourceRoot":"src/components"}]}