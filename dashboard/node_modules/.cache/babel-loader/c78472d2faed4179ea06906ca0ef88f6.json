{"remainingRequest":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\Barchart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\Barchart.vue","mtime":1605367221195},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIgZnJvbSAiQzovVXNlcnMvaHVhd2UvRGVza3RvcC9TYWZldHktQXBwbGljYXRpb24tQ1M1NDIvZGFzaGJvYXJkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvaHVhd2UvRGVza3RvcC9TYWZldHktQXBwbGljYXRpb24tQ1M1NDIvZGFzaGJvYXJkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgR0NoYXJ0IH0gZnJvbSAndnVlLWdvb2dsZS1jaGFydHMnOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwp2YXIgd2ViY2FsbCA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC8iLAogIHRpbWVvdXQ6IDIwMDAwLAogIHdpdGhDcmVkZW50aWFsczogZmFsc2UsCiAgaGVhZGVyczogewogICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIgogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBjb21wb25lbnRzOiB7CiAgICBHQ2hhcnQ6IEdDaGFydAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0c0xpYjogbnVsbCwKICAgICAgLy8gQXJyYXkgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IHByb2Nlc3NlZCB3aXRoIHZpc3VhbGl6YXRpb24uYXJyYXlUb0RhdGFUYWJsZSBmdW5jdGlvbgogICAgICBjaGFydERhdGE6IFsvLyBbJ1doZXRoZXInLCAnZnJlcXVlbmN5Jywge3JvbGU6ICdzdHlsZSd9XSwKICAgICAgICAvLyBbJ3N1bm55JywgMTAwMCwgJ3N0cm9rZS1jb2xvcjogcGluaywgc3Ryb2tlLXdpZHRoOiAxMDAsIGZpbGwtY29sb3I6c2lsdmVyJ10sCiAgICAgICAgLy8gWydjbG91ZHknLCA5OTksICdjb2xvcjpzaWx2ZXInXSwKICAgICAgICAvLyBbJ3JhaW55JywgODc2LCAnY29sb3I6IGJsdWUnXSwKICAgICAgICAvLyBbJ3Nub3d5JywgNjY2LCAnY29sb3I6IHNpbHZlciddLAogICAgICAgIC8vIFsnc2FuZHknLCA1MzAsICdjb2xvcjogc2lsdmVyJ10sCiAgICAgICAgLy8gWyd3aW5keScsIDMzMCwgJ2NvbG9yOiBzaWx2ZXInXSwKICAgICAgICAvLyBbJ3RodW5kZXInLCAyNzAsICdjb2xvcjogc2lsdmVyJ10sCiAgICAgICAgLy8gWydsaWdodGVuaW5nJywgOTMsICdjb2xvcjpzaWx2ZXInXSwKICAgICAgICAvLyBbJ2hhaWwnLCA3NywnIzc2QTdGQSddLAogICAgICAgIC8vIFsncmF0eXBob29uaW55JywgMTIsJ2NvbG9yOnNpbHZlciddLAogICAgICAgIC8vIFtyZXN1bHRbMF1bJ3dlYXRoZXInXSwgcmVzdWx0WzBdWydjbnQnXSwnY29sb3I6c2lsdmVyJ10sCiAgICAgIF0gLy9zZXR0aW5nOiB7cGFja2FnZXM6WyJjb3JlY2hhcnQiXX0KCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNoYXJ0T3B0aW9uczogZnVuY3Rpb24gY2hhcnRPcHRpb25zKCkgewogICAgICBpZiAoIXRoaXMuY2hhcnRzTGliKSByZXR1cm4gbnVsbDsKICAgICAgcmV0dXJuIHRoaXMuY2hhcnRzTGliLmNoYXJ0cy5CYXIuY29udmVydE9wdGlvbnMoewogICAgICAgIGNoYXJ0OiB7CiAgICAgICAgICB0aXRsZTogJ1dlYXRoZXIgZnJlcXVlbmN5JywKICAgICAgICAgIHN1YnRpdGxlOiAnSGVyZSBpcyBvdXIgc3VidGl0bGUnCiAgICAgICAgfSwKICAgICAgICBiYXJzOiAnaG9yaXpvbnRhbCcsCiAgICAgICAgLy8gUmVxdWlyZWQgZm9yIE1hdGVyaWFsIEJhciBDaGFydHMuCiAgICAgICAgaEF4aXM6IHsKICAgICAgICAgIGZvcm1hdDogJ2RlY2ltYWwnCiAgICAgICAgfSwKICAgICAgICBoZWlnaHQ6IDQwMCwKICAgICAgICBjb2xvcnM6IFsnIzFiOWU3NycsICcjZDk1ZjAyJywgJyM3NTcwYjMnXSAvL2lzU3RhY2tlZDogdHJ1ZQoKICAgICAgfSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkNoYXJ0UmVhZHk6IGZ1bmN0aW9uIG9uQ2hhcnRSZWFkeShjaGFydCwgZ29vZ2xlKSB7CiAgICAgIHRoaXMuY2hhcnRzTGliID0gZ29vZ2xlOwogICAgfSwKICAgIGNyZWF0ZUdyYXBoOiBmdW5jdGlvbiBjcmVhdGVHcmFwaCgpIHsKICAgICAgdmFyIHZtID0gdGhpczsKICAgICAgdmFyIHVybCA9ICIvd2VhdGhlcmNudCI7CgogICAgICB0cnkgewogICAgICAgIHdlYmNhbGwuZ2V0KHVybCkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlc3BvbnNlKSB7CiAgICAgICAgICAgIHZhciB0ZW1wLCByZXN1bHQsIF9pdGVyYXRvciwgX3N0ZXAsIGksIGN1cjsKCiAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyZXNwb25zZS5kYXRhKSk7CgogICAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgdGVtcCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gW1sndGV4dCcsICd2YWx1ZSddXTsKICAgICAgICAgICAgICAgICAgICBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0ZW1wKTsKCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGkgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgY3VyID0gW107CiAgICAgICAgICAgICAgICAgICAgICAgIGN1ci5wdXNoKGlbJ3RleHQnXSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGN1ci5wdXNoKGlbJ3ZhbHVlJ10pOwogICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChjdXIpOwogICAgICAgICAgICAgICAgICAgICAgfSAvLyBhbGVydChyZXN1bHQpCiAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXN1bHQpCgogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgICAgICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIHZtLmNoYXJ0RGF0YSA9IHJlc3VsdC5zbGljZSgwLCAxMSk7CgogICAgICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgfSkpOwoKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgIH07CiAgICAgICAgfSgpKTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coImVycm9yIik7CiAgICAgICAgYWxlcnQoZXJyKTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuY3JlYXRlR3JhcGgoKTsKICB9Cn07"},{"version":3,"sources":["Barchart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAeA,SAAA,MAAA,QAAA,mBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,IAAA,OAAA,GAAA,KAAA,CAAA,MAAA,CAAA;AACA,EAAA,OAAA,EAAA,wBADA;AAEA,EAAA,OAAA,EAAA,KAFA;AAGA,EAAA,eAAA,EAAA,KAHA;AAIA,EAAA,OAAA,EAAA;AAAA,oBAAA;AAAA;AAJA,CAAA,CAAA;AAOA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA;AACA,MAAA,SAAA,EAAA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,OAHA,CAiBA;;AAjBA,KAAA;AAmBA,GAzBA;AA0BA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,UAAA,CAAA,KAAA,SAAA,EAAA,OAAA,IAAA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,cAAA,CAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA,mBADA;AAEA,UAAA,QAAA,EAAA;AAFA,SADA;AAKA,QAAA,IAAA,EAAA,YALA;AAKA;AACA,QAAA,KAAA,EAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SANA;AAOA,QAAA,MAAA,EAAA,GAPA;AAQA,QAAA,MAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CARA,CASA;;AATA,OAAA,CAAA;AAWA;AAdA,GA1BA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA,MADA,EACA;AACA,WAAA,SAAA,GAAA,MAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,UAAA,GAAA,GAAA,aAAA;;AACA,UAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA;AAAA,6EAAA,iBAAA,QAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CADA;;AAAA;AACA,oBAAA,IADA;AAEA,oBAAA,MAFA,GAEA,CAAA,CAAA,MAAA,EAAA,OAAA,CAAA,CAFA;AAAA,2DAGA,IAHA;;AAAA;AAGA,0EAAA;AAAA,wBAAA,CAAA;AACA,wBAAA,GADA,GACA,EADA;AAEA,wBAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AACA,wBAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,OAAA,CAAA;AACA,wBAAA,MAAA,CAAA,IAAA,CAAA,GAAA;AACA,uBARA,CASA;AACA;;AAVA;AAAA;AAAA;AAAA;AAAA;;AAWA,oBAAA,EAAA,CAAA,SAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAA;;AAAA;AAAA;AAAA;AAAA;AAaA,OAdA,CAcA,OAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA,QAAA,KAAA,CAAA,GAAA,CAAA;AACA;AACA;AAzBA,GA1CA;AAqEA,EAAA,OArEA,qBAqEA;AACA,SAAA,WAAA;AACA;AAvEA,CAAA","sourcesContent":["#author: xli14@WPI.EDU\r\n\r\n<template>\r\n  <div id='app'>\r\n  <GChart\r\n    :settings=\"{packages: ['bar']}\"    \r\n    :data=\"chartData\"\r\n    :options=\"chartOptions\"\r\n    :createChart=\"(el, google) => new google.charts.Bar(el)\"\r\n    @ready=\"onChartReady\"\r\n  />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { GChart } from 'vue-google-charts'\r\nimport axios from \"axios\";\r\n\r\nvar webcall = axios.create({\r\n  baseURL: \"http://127.0.0.1:5000/\",\r\n  timeout: 20000,\r\n  withCredentials: false,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    GChart\r\n  },\r\n  data () {\r\n    return {\r\n      chartsLib: null, \r\n      // Array will be automatically processed with visualization.arrayToDataTable function\r\n      chartData: [\r\n        // ['Whether', 'frequency', {role: 'style'}],\r\n        // ['sunny', 1000, 'stroke-color: pink, stroke-width: 100, fill-color:silver'],\r\n        // ['cloudy', 999, 'color:silver'],\r\n        // ['rainy', 876, 'color: blue'],\r\n        // ['snowy', 666, 'color: silver'],\r\n        // ['sandy', 530, 'color: silver'],\r\n        // ['windy', 330, 'color: silver'],\r\n        // ['thunder', 270, 'color: silver'],\r\n        // ['lightening', 93, 'color:silver'],\r\n        // ['hail', 77,'#76A7FA'],\r\n        // ['ratyphooniny', 12,'color:silver'],\r\n        // [result[0]['weather'], result[0]['cnt'],'color:silver'],\r\n      ],\r\n      //setting: {packages:[\"corechart\"]}\r\n    }\r\n  },\r\n  computed: {\r\n    chartOptions () {\r\n      if (!this.chartsLib) return null\r\n      return this.chartsLib.charts.Bar.convertOptions({\r\n        chart: {\r\n          title: 'Weather frequency',\r\n          subtitle: 'Here is our subtitle'\r\n        },\r\n        bars: 'horizontal', // Required for Material Bar Charts.\r\n        hAxis: { format: 'decimal' },\r\n        height: 400,\r\n        colors: ['#1b9e77', '#d95f02', '#7570b3'],\r\n        //isStacked: true\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    onChartReady (chart, google) {\r\n      this.chartsLib = google\r\n    },\r\n    createGraph() {\r\n      var vm = this;\r\n      var url = \"/weathercnt\";\r\n      try {\r\n        webcall.get(url).then(async function (response) {\r\n          var temp = await JSON.parse(JSON.stringify(response.data));\r\n          var result = [['text', 'value']]\r\n          for(var i of temp){\r\n            var cur = []\r\n            cur.push(i['text'])\r\n            cur.push(i['value'])\r\n            result.push(cur)\r\n          }\r\n          // alert(result)\r\n          // console.log(result)\r\n          vm.chartData = result.slice(0,11)\r\n        });\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n        alert(err);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.createGraph();\r\n  },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components"}]}