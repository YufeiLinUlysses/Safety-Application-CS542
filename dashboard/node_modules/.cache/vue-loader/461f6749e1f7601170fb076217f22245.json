{"remainingRequest":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\Templ\\crimeReport.vue?vue&type=template&id=afd47662&scoped=true&","dependencies":[{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\Templ\\crimeReport.vue","mtime":1606421554298},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\huawe\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICBbCiAgICAgIF9jKAogICAgICAgICJiLW5hdi1pdGVtIiwKICAgICAgICB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAiYi1tb2RhbCIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtYi1tb2RhbC5tb2RhbC1wcmV2ZW50LWNsb3NpbmciLAogICAgICAgICAgICAgIG1vZGlmaWVyczogeyAibW9kYWwtcHJldmVudC1jbG9zaW5nIjogdHJ1ZSB9CiAgICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICBhdHRyczogeyBpZDogInJlcG9ydCIgfQogICAgICAgIH0sCiAgICAgICAgW19jKCJiLWljb24iLCB7IGF0dHJzOiB7IGljb246ICJleGNsYW1hdGlvbi10cmlhbmdsZSIgfSB9KV0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygiYi10b29sdGlwIiwgeyBhdHRyczogeyB0YXJnZXQ6ICJyZXBvcnQiLCBwbGFjZW1lbnQ6ICJib3R0b20iIH0gfSwgWwogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJSZXBvcnQgQ3JpbWUiKV0pCiAgICAgIF0pLAogICAgICBfYygKICAgICAgICAiYi1tb2RhbCIsCiAgICAgICAgewogICAgICAgICAgcmVmOiAibW9kYWwiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgaWQ6ICJtb2RhbC1wcmV2ZW50LWNsb3NpbmciLAogICAgICAgICAgICB0aXRsZTogIlJlcG9ydCBBIENyaW1lIiwKICAgICAgICAgICAgc2Nyb2xsYWJsZTogIiIKICAgICAgICAgIH0sCiAgICAgICAgICBvbjogeyBzaG93OiBfdm0ucmVzZXRNb2RhbCwgaGlkZGVuOiBfdm0ucmVzZXRNb2RhbCwgb2s6IF92bS5oYW5kbGVPayB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImZvcm0iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgcmVmOiAiZm9ybSIsCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIHN1Ym1pdDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKQogICAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKQogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmhhbmRsZVN1Ym1pdCgkZXZlbnQpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImg0IiwgW192bS5fdigiQ3JpbWUgSW5mbyIpXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiYi1mb3JtLWdyb3VwIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzdGF0ZTogX3ZtLm5hbWVTdGF0ZSwKICAgICAgICAgICAgICAgICAgICBsYWJlbDogIkNyaW1pbmFsIiwKICAgICAgICAgICAgICAgICAgICAibGFiZWwtZm9yIjogImNyaW1pbmFsIiwKICAgICAgICAgICAgICAgICAgICAiaW52YWxpZC1mZWVkYmFjayI6ICJOYW1lIGlzIHJlcXVpcmVkIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiYi1mb3JtLWlucHV0IiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICBpZDogImNyaW1pbmFsIiwKICAgICAgICAgICAgICAgICAgICAgIHN0YXRlOiBfdm0ubmFtZVN0YXRlLAogICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6ICIiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5jcmltaW5hbCwKICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmNyaW1pbmFsID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImNyaW1pbmFsIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJiLWZvcm0tZ3JvdXAiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHN0YXRlOiBfdm0ubmFtZVN0YXRlLAogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiVmljdGltIiwKICAgICAgICAgICAgICAgICAgICAibGFiZWwtZm9yIjogInZpY3RpbSIsCiAgICAgICAgICAgICAgICAgICAgImludmFsaWQtZmVlZGJhY2siOiAiTmFtZSBpcyByZXF1aXJlZCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoImItZm9ybS1pbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgaWQ6ICJjcmltaW5hbCIsCiAgICAgICAgICAgICAgICAgICAgICBzdGF0ZTogX3ZtLm5hbWVTdGF0ZSwKICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiAiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0udmljdGltLAogICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0udmljdGltID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInZpY3RpbSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiYi1mb3JtLWdyb3VwIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgbGFiZWw6ICJSZWxhdGlvbiIsICJsYWJlbC1mb3IiOiAiY3ZyIiB9IH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJiLWZvcm0tc2VsZWN0IiwgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiMTUwcHgiIH0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIGlkOiAiY3ZyIiwKICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZS1maWVsZCI6ICJ2YWx1ZSIsCiAgICAgICAgICAgICAgICAgICAgICAidGV4dC1maWVsZCI6ICJ0ZXh0IiwKICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IF92bS5yZWxhdGlvbnMKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnJlbGF0aW9uLAogICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0ucmVsYXRpb24gPSAkJHYKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAicmVsYXRpb24iCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImItZm9ybS1ncm91cCIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGxhYmVsOiAiVHlwZSIsICJsYWJlbC1mb3IiOiAiY3R5cGUiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoImItZm9ybS1zZWxlY3QiLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIxNTBweCIgfSwKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgaWQ6ICJjdHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICAidmFsdWUtZmllbGQiOiAidmFsdWUiLAogICAgICAgICAgICAgICAgICAgICAgInRleHQtZmllbGQiOiAidGV4dCIsCiAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zOiBfdm0udHlwZXMKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnR5cGUsCiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS50eXBlID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInR5cGUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX2MoInNlbGVjdCIsIHsgYXR0cnM6IHsgaWQ6ICJmdXp6T3B0aW9uc0xpc3QiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgIF9jKCJvcHRpb24iLCB7IGF0dHJzOiB7IHZhbHVlOiAiMSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICIgVGFwb3V0IEJhaWwgQm9uZHMgLSA4NzAsIE5vcnRoIDFzdCBTdHJlZXQsIFNhbiBKb3NlICg0MDgtMjg4LTIyNDUpICIKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygib3B0aW9uIiwgeyBhdHRyczogeyB2YWx1ZTogIjIiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAiIEZvdXIgU2Vhc29ucyBDbGVhbmluZyBTZXJ2aWNlcyAtIDY1NzAgR3JhbnQgQ3QsIEhvbGx5d29vZCAoOTU0LTk2MS0yMDgwKSAiCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoIm9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6ICIzIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgIiBJa2UncyBQbGFjZSAtIDM0ODkgMTZ0aCBTdCwgU2FuIEZyYW5jaXNjbyAoNDE1LTU1My02ODg4KSAiCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoIm9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6ICI0IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgIiBDb2F0cyBBcHByYWlzYWwgU2VydmljZXMgSW5jIC0gMTAgbWFpbiBzdHJlZXQsIENvbndheSAoNTAxLTMyNy03MzAxKSAiCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoIm9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6ICI1IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgIiBTY2htaXR0IEhlYXRpbmcgLSAzNCwgV29vZHdhcmQgU3QsIFNhbiBGcmFuY2lzY28gKDQxNS01MjItMDk2NikgIgogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJvcHRpb24iLCB7IGF0dHJzOiB7IHZhbHVlOiAiNiIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICIgTGFya2luIFBsdW1iaW5nIC0gMTgwMSwgSW5kdXN0cmlhbCBSZCwgTGFzIFZlZ2FzICg3MDItMzgyLTI0MTApICIKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygib3B0aW9uIiwgeyBhdHRyczogeyB2YWx1ZTogIjciIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAiIERpdmluZSBNb3ZpbmcgJiBTdG9yYWdlIC0gODQ1LCAzcmQgQXZlLCBOZXcgWW9yayAoMjEyLTI0NC00MDExKSAiCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoIm9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6ICI4IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgIiBSdWxvbiBUIEJ1cnRvbiAmIEFzc29jaWF0ZXMgLSA2MDAwLCBGYXNoaW9uIEJsdmQsIE11cnJheSAoODAxLTMwNS0zNzAyKSAiCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoIm9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6ICI5IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgIiBMYWtlIE5vbmEgRGVudGFsIEdyb3VwIC0gMTA0MjksIE1vc3MgUGFyayBSb2FkLCBPcmxhbmRvICg0MDctMjc3LTE3NzkpICIKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygib3B0aW9uIiwgeyBhdHRyczogeyB2YWx1ZTogIjEwIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgIiBEZW50aXN0cnkgYXQgTGFrZSBOb25hIC0gMTA3NDMsIE5hcmNvb3NzZWUgUm9hZCwgT3JsYW5kbyAoNDA3LTM4MC03NzM0KSAiCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoIm9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6ICIxMSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICIgQXJvcmEgVmlubmllIENQQSAtIDcyMzIsIFdlc3QgU2FuZCBMYWtlIFJvYWQsIE9ybGFuZG8gKDQwNy0yNDgtOTY3NykgIgogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJvcHRpb24iLCB7IGF0dHJzOiB7IHZhbHVlOiAiMTIiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAiIERvYyBUaG9tcHNvbiBQbHVtYmluZyAtIDExMjAsIFZlbmV0aWFuIFdheSwgQ29sdW1idXMgKDYxNC03MzYtMjAwMSkgIgogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJvcHRpb24iLCB7IGF0dHJzOiB7IHZhbHVlOiAiMTMiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAiIFNhcmF2YW5hIEJoYXZhbiAtIDEzMDUsIFNvdXRoIE1hcnkgQXZlbnVlLCBPcmxhbmRvICg0MDgtNjE0LTc3NTUpICIKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygib3B0aW9uIiwgeyBhdHRyczogeyB2YWx1ZTogIjE0IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgIiBTYXJhdmFuYSBCaGF2YW4gLSAxMzA1LCBTb3V0aCBNYXJ5IEF2ZW51ZSwgU3Vubnl2YWxlICg0MDgtNjE2LTc3NTUpICIKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgYXR0cnM6IHsgaWQ6ICJmdXp6U2VhcmNoIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBhdHRyczogeyBpZDogImZ1enpOYW1lQ29udGFpbmVyIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImZ1enpOYW1lIiB9KSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImZ1enpBcnJvdyIgfSkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBhdHRyczogeyBpZDogImZ1enpEcm9wZG93bkNvbnRhaW5lciIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZnV6ek1hZ2ljQm94IiwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAidGV4dCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAic2VhcmNoLi4iCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAiZnV6elNlYXJjaEljb24iIH0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoInVsIiwgeyBhdHRyczogeyBpZDogImZ1enpSZXN1bHRzIiB9IH0pCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygiaDQiLCBbX3ZtLl92KCJEYXRlIFRpbWUiKV0pLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImItZm9ybS1ncm91cCIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGxhYmVsOiAiRGF0ZSIsICJsYWJlbC1mb3IiOiAiRGF0ZSIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiYi1mb3JtLWlucHV0IiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAiYGRhdGVgIiwgdHlwZTogImRhdGUiIH0sCiAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uY2RhdGUsCiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5jZGF0ZSA9ICQkdgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJjZGF0ZSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiYi1mb3JtLWdyb3VwIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgbGFiZWw6ICJUaW1lIiwgImxhYmVsLWZvciI6ICJ0aW1lIiB9IH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJiLWZvcm0taW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJgdGltZWAiLCB0eXBlOiAidGltZSIgfSwKICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5jdGltZSwKICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmN0aW1lID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImN0aW1lIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygiaDQiLCBbX3ZtLl92KCJMb2NhdGlvbiIpXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiYi1mb3JtLWdyb3VwIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzdGF0ZTogX3ZtLm5hbWVTdGF0ZSwKICAgICAgICAgICAgICAgICAgICBsYWJlbDogIkxhdGl0dWRlIiwKICAgICAgICAgICAgICAgICAgICAibGFiZWwtZm9yIjogImxhdCIsCiAgICAgICAgICAgICAgICAgICAgImludmFsaWQtZmVlZGJhY2siOiAiTG9uZ2l0dWRlIGlzIHJlcXVpcmVkIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiYi1mb3JtLWlucHV0IiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICBpZDogImxhdCIsCiAgICAgICAgICAgICAgICAgICAgICBzdGF0ZTogX3ZtLm5hbWVTdGF0ZSwKICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiAiIiwKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJudW1iZXIiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5sYXRpdHVkZSwKICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmxhdGl0dWRlID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImxhdGl0dWRlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJiLWZvcm0tZ3JvdXAiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHN0YXRlOiBfdm0ubmFtZVN0YXRlLAogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiTG9uZ2l0dWRlIiwKICAgICAgICAgICAgICAgICAgICAibGFiZWwtZm9yIjogImxudCIsCiAgICAgICAgICAgICAgICAgICAgImludmFsaWQtZmVlZGJhY2siOiAiTG9uZ2l0dWRlIGlzIHJlcXVpcmVkIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiYi1mb3JtLWlucHV0IiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICBpZDogImxudCIsCiAgICAgICAgICAgICAgICAgICAgICBzdGF0ZTogX3ZtLm5hbWVTdGF0ZSwKICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiAiIiwKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJudW1iZXIiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5sb25naXR1ZGUsCiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5sb25naXR1ZGUgPSAkJHYKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAibG9uZ2l0dWRlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJiLWZvcm0tZ3JvdXAiLAogICAgICAgICAgICAgICAgeyBhdHRyczogeyBsYWJlbDogIlBvbGljZSBEaXN0cmljdCIsICJsYWJlbC1mb3IiOiAicGQiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoImItZm9ybS1zZWxlY3QiLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIxNTBweCIgfSwKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgaWQ6ICJwZCIsCiAgICAgICAgICAgICAgICAgICAgICAidmFsdWUtZmllbGQiOiAidmFsdWUiLAogICAgICAgICAgICAgICAgICAgICAgInRleHQtZmllbGQiOiAidGV4dCIsCiAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zOiBfdm0ucG9saWNlRAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ucG9saWNlLAogICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0ucG9saWNlID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInBvbGljZSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0KICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}